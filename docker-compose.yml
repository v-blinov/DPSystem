version: "3.8"

services: 
    rabbit:
        image: rabbitmq:3-management
        hostname: rabbit
        container_name: rabbit
        ports:
            - 5672:5672
            - 15672:15672
        healthcheck:
            test: ["CMD", "curl", "-f", "http://localhost:15672"]
            interval: 30s
            timeout: 10s
            retries: 5
    
    messageSender:
        image: ${DOCKER_REGISTRY-}messagesender
        build:
            context: .
            dockerfile: MessageService/Dockerfile
        environment:
            - RABBIT_HOSTNAME=rabbit
        restart: on-failure
        depends_on:
            - rabbit

    api:
        image: vblinov/apidpsystem
        build: 
            context: .
            dockerfile: ApiDPSystem/Dockerfile
        environment:
            - RABBIT_HOSTNAME=rabbit
            - ASPNETCORE_ENVIRONMENT=Production
        restart: on-failure
        volumes:
          - ./ApiDPSystem/ApiDPSystem.xml:/app/ApiDPSystem.xml
        ports:
            - 8081:80
        depends_on:
            - mssql
            - rabbit
      
    nginx:
        image: nginx:latest
        volumes:
            - ./ApiDPSystem/nginx.conf:/etc/nginx/nginx.conf
        ports:
            - 90:80
        depends_on:
            - api

    mssql:
        image: mcr.microsoft.com/mssql/server
        container_name: mssql
        environment: 
            - ACCEPT_EULA=Y
            - SA_PASSWORD=${PASSWORD}
        ports:
            - 8083:1433

    seq:
      image: datalust/seq:latest
      container_name: seq
      restart: always
      environment:
        - ACCEPT_EULA=Y
      volumes:
        - seq:/data
      ports:
        - 5380:80
        - 5341:5341

volumes:
  seq:

networks:
    default: